name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    
    env:
      RUST_BACKTRACE: 1
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install Tauri dependencies
        run: |
          sudo apt-get update
          
          # Try webkit 4.1 first (Ubuntu 24.04), fallback to 4.0 (older versions)
          if ! sudo apt-get install -y libwebkit2gtk-4.1-dev; then
            sudo apt-get install -y libwebkit2gtk-4.0-dev
          fi
          
          # Install other dependencies
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf
      
      - name: Run Rust tests
        working-directory: src-tauri
        run: |
          # Temporarily use CI config to avoid external binary issues
          mv tauri.conf.json tauri.conf.json.bak
          mv tauri-ci.conf.json tauri.conf.json
          
          # Run tests with CI configuration
          cargo test
          
          # Restore original config
          mv tauri.conf.json tauri-ci.conf.json
          mv tauri.conf.json.bak tauri.conf.json

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      CI: true
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies with retry
        run: |
          # Clear any existing installations
          rm -rf node_modules package-lock.json
          
          # Clean npm cache
          npm cache clean --force
          
          # Install dependencies with retries for robustness
          for i in {1..3}; do
            echo "Installation attempt $i"
            if npm install; then
              echo "Installation successful"
              break
            else
              echo "Installation failed, retrying..."
              rm -rf node_modules package-lock.json
              sleep 5
            fi
          done
          
          # Specifically install rollup native binary if missing
          if ! npm list @rollup/rollup-linux-x64-gnu >/dev/null 2>&1; then
            echo "Installing missing rollup native binary"
            npm install @rollup/rollup-linux-x64-gnu --save-optional || true
          fi
      
      - name: Run frontend tests
        run: |
          # Try running tests normally first
          if npm run test; then
            echo "Tests completed successfully"
          else
            echo "Tests failed with normal approach, trying alternative..."
            # If tests fail, try with alternative approaches
            echo "Checking rollup installation..."
            npm list rollup || npm install rollup --force
            npm run test || {
              echo "Frontend tests failed. Checking environment..."
              echo "Node version: $(node --version)"
              echo "NPM version: $(npm --version)"
              echo "Platform: $(uname -a)"
              ls -la node_modules/.bin/ | grep -E "(vitest|rollup)" || true
              echo "Package contents:"
              npm list --depth=0 | grep -E "(vitest|rollup)" || true
              exit 1
            }
          fi
